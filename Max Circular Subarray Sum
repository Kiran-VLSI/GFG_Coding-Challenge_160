def circularSubarraySum(arr):
    n = len(arr)
    def kadane(nums):
        max_ending_here = max_so_far = nums[0]
        for x in nums[1:]:
            max_ending_here = max(x, max_ending_here + x)
            max_so_far = max(max_so_far, max_ending_here)
        return max_so_far
    max_kadane = kadane(arr)
    total_sum = sum(arr)
    min_kadane = kadane([-x for x in arr])
    max_wrap = total_sum + min_kadane  
    if max_wrap == 0:  
        return max_kadane
    return max(max_kadane, max_wrap)
